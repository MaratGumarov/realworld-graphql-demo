
type Query {
    articleById(id: ID): Article
    findArticleByIds(ids: [ID]): [Article]
    findArticleByIdWithAuthor(id: ID): Article
    findArticleByIdsWithAuthor(ids: [ID]): [Article]
    articlesByAuthor(id: ID): [Article]
    #todo: import schema for @connection directive
    #will be generated by graphql.relay from graphql-java library
    articles(first: Int!, from: String): ArticleConnection @connection (for: "Article")
    allArticles: [Article]
}

interface Article{
    id:ID
    author:Author
}

type NewsArticle implements Article{
    id: ID
    author: Author
    text: String
    description: String
    date: String
}

type StaticImageArticle implements Article{
    id:ID
    author:Author
    url:String
}

type Author {
    id: ID
    firstName: String
    lastName: String
}